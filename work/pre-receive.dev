#!/usr/bin/env bash
ERRORS=0
OPTIONS="--diff --max-line-length=120 --show-source --exclude=*smev*_api.py"

function filter_file() {
    file=$1
    IS_API=$(basename $file | grep '_api.py$' > /dev/null; echo $?)
    IS_SMEV=$(echo $file | grep 'smev' > /dev/null; echo $?)

    if ! grep generateDS $file >/dev/null 2>&1 && ( !(return $IS_API) || !(return $IS_SMEV) ); then
        return 0
    fi
    return 1
}

while read old new ref
do
    if [ $old == "0000000000000000000000000000000000000000" ]; then
        old=$(git log --pretty=oneline | head -n 1 | tail -n 1 | cut -d" " -f 1)
    fi
    echo "==> Style Check from git diff $old $new "
    echo ""

    for f in $(git diff $old $new --name-only | grep .py); do
        dir=$(dirname $f)
        if [ $dir != "." ]; then
            mkdir -p $dir > /dev/null 2>&1
        fi
        git cat-file -p $(git ls-tree $new $f  | cut -d " " -f 3 | cut -f 1) > $f
        if filter_file $f; then
            #git diff -U0 $old $new -- $f 
            if ! git diff -U0 $old $new -- $f | pycodestyle $OPTIONS; then
                ERRORS=1
            fi
            if ! git diff -U0 $old $new -- $f | ./checkpydoc.py ./; then
                ERRORS=1
            fi
        fi
        rm $f
        if [ $dir != "." ]; then
            rmdir $dir > /dev/null 2>&1
        fi
    done

done

if [[ $ERRORS = 1 ]]; then
    echo Style errors, reject!
fi
exit $ERRORS

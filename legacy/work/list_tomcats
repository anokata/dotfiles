#!/usr/bin/perl
# vi: filetype=perl
use File::Basename;

format STDOUT =
 DIR      | PID           | PATH 
----------------------------------------------------------------------
 @<<<<<<<<  @<<<<<<       @<<<<<
 $dir,       $pid,          $path
----------------------------------------------------------------------
.

$pscmd = `ps -eo pid,cmd | grep tomcat | grep -v grep | grep -v perl`;
@psarray = $pscmd;
for (@psarray) {
    my $n = 0;
    s/^\s+//;
    s/ +/ /g;
    $pid = substr $_, 0, (index $_, " ");
    # TODO split at -Dcatalina.base
    my $cmd = substr $_, (index $_, " ");
    my @opts = split(/\-/, $cmd);
    @a = grep(/tomcat/, @opts);
    @a = grep(/home/, @a);
    $path = @a[0];
    $path = substr($path, index($path, "/"));
    $dir = dirname(dirname($path));
    print "#$n\n";
    print "\tpath: \t$dir\n";
    print "\tpid: \t\t$pid\n";
    #write();
    # parse config
    open(CONFIG, "<$dir/conf/server.xml") || die "Not found";
	while(<CONFIG>) {
        if (/HTTP/ and /Connector/ and /port=/) {
            @b = split('"');
            $port = @b[1];
            print "\tHTTP port: \t$port\n";
        }
        if (/AJP/ and /Connector/ and /port=/) {
            @b = split('"');
            $port = @b[1];
            print "\tAJP port: \t$port\n";
        }
    }
	close(CONFIG);

    open(CONFIG, "<$dir/bin/setenv.sh") || die "Not found";
	while(<CONFIG>) {
        if (/jmxremote/) {
            @b = split("jmxremote.port=");
            @port = split(/ /, @b[1]);
            $port = @port[0];
            print "\tJMX port: \t$port \n";
        }
    }
	close(CONFIG);
    $n++;
}
exit;


* 2019
https://practiceit.cs.washington.edu/problem/list
RMI
EJB
Jini
Servlets/Tomcat


* 2018
* cli
      jcmd
      jstat
      jstack
      jconsole

* mem
>https://stackoverflow.com/questions/6470651/creating-a-memory-leak-with-java
>http://www.oracle.com/technetwork/java/javase/tech/vmoptions-jsp-140102.html
>https://docs.oracle.com/cd/E13150_01/jrockit_jvm/jrockit/jrdocs/refman/optionX.html
>https://alvinalexander.com/blog/post/java/java-xmx-xms-memory-heap-size-control
>http://www.javaspecialist.ru/2011/04/permanent.html
>https://stackoverflow.com/questions/2724820/tomcat-how-to-limit-the-maximum-memory-tomcat-will-use
>https://docs.oracle.com/javase/8/docs/api/java/lang/management/MemoryMXBean.html
>https://docs.oracle.com/javase/7/docs/api/java/lang/management/MemoryUsage.html
** conspect
...
Heap - for all class instances and arrays 
Non-Heap - method area that is shared among all threads: per-class structures
such as a runtime constant pool, field and method data, and the code for
methods and constructors, JIT

Heap - хранит все экземпляры классов и массивов.
Non-Heap - хранит классовые структуры - пул констант, данные полей и методов, код методов и конструкторов.
init - изначально запрошенное количество памяти.
used - количество памяти используемое в данный момент.
committed - количество памяти гарантированно доступное вм.
max  - максимальное количество памяти которое может быть использовано.
max >= committed >= used
max heap = max heap size(Xmx) minus the max survivor space size

* learn
>http://www.debian.org/doc/manuals/packaging-tutorial/packaging-tutorial.en.pdf
https://vk.com/page-54530371_48776757
>http://firozstar.tripod.com/_darksiderg.pdf
>http://docs.oracle.com/javase/specs/
>https://maven.apache.org/guides/getting-started/index.html
>http://www.eclipse.org/jetty/documentation/current/quickstart-running-jetty.html
>https://urvanov.ru/2015/07/15/%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D0%B0-java-apache-tomcat-%D0%B8-postgresql-%D0%B2-linux-%D0%B5/
>http://asolntsev.livejournal.com/53088.html
>http://www.pvsm.ru/java/39711
>http://pr0java.blogspot.ru/p/java.html
http://java-course.ru/begin/xml/
>http://samolisov.blogspot.ru/2008/01/java.html
>http://pr0java.blogspot.ru/2015/04/classpath-java.html
>http://www.skipy.ru/technics/exceptions.html
http://programador.ru/
http://javatalks.ru/branches/19
>http://spec-zone.ru/RU/Java/Docs/7/technotes/guides/rmi/codebase.html

* term
>http://plindenbaum.blogspot.ru/2008/01/java-native-interface-jni-notebook.html
>https://sourceforge.net/projects/javacurses/
>https://github.com/mabe02/lanterna
>http://www.pitman.co.za/projects/charva/

* path
** Gradle build system
>http://www.gradle.org/docs/1.12/userguide/userguide.html
** Spring Framework
>http://projects.spring.io/spring-framework
** Java Persistence API
>http://en.wikipedia.org/wiki/Java_Persistence_API
** OpenJPA framework
>http://openjpa.apache.org/builds/2.3.0/apache-openjpa/docs/main.html
** Vaadin web applications framework
>https://vaadin.com/book
** Java Servlets
** Java Swing
** HyperSQL
>http://hsqldb.org/
** Cuba
>https://docs.cuba-platform.com/cuba/5.6/manual/ru/webhelp/preface.html
>https://doc.cuba-platform.com/manual-6.5-ru/preface.html



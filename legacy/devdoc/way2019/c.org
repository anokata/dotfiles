https://github.com/hexagonal-sun/bic
patterns in c adam thornhill pdf
http://scanftree.com/programs/c/programs-to-print-pyramid-patterns-in-c-part-1/
http://wiki.opennet.ru/Epoll_schat_example
- libtool :: http://www.linuxcenter.ru/lib/books/linuxdev/linuxdev6.phtml
>https://en.wikipedia.org/wiki/C_dynamic_memory_allocation
>http://squadette.ru/automake-ru/html_chapter/automake-ru_2.html
>https://gcc.gnu.org/onlinedocs/cpp/Variadic-Macros.html
>https://stackoverflow.com/questions/9907160/how-to-convert-enum-names-to-string-in-c
putenv
>https://habrahabr.ru/post/244835/
- USE :: https://en.wikipedia.org/wiki/AddressSanitizer
>>>>http://troydhanson.github.io/
>>>https://news.ycombinator.com/item?id=10864176
- USE :: >https://developers.redhat.com/blog/2014/10/16/gcc-undefined-behavior-sanitizer-ubsan/
>https://www.opennet.ru/docs/RUS/gtk/node31.html
a[2], a+2 - почти подмассив, slice. можно указать длинну или обнулить конец, вот и слайс
>https://rtfm.co.ua/c-struktury/
>https://github.com/trending/c
g_strchomp
>https://developer.gnome.org/glib/stable/glib-Strings.html
>https://stackoverflow.com/questions/3437404/min-and-max-in-c
g_strstrip
g_ascii_strtoull
static function = private 
>https://bobobobo.wordpress.com/2008/01/28/how-to-use-variable-argument-lists-va_list/
>https://github.com/NetHack/NetHack/blob/e14120b282a1f233be29d9fbcdf0225e78d974e0/win/gnome/gnmenu.c#L421
>https://gcc.gnu.org/onlinedocs/gcc/Variable-Attributes.html#Variable-Attributes
>http://www.sigbus.info/how-i-wrote-a-self-hosting-c-compiler-in-40-days.html
>https://dmitryfrank.com/articles/oop_in_c

>http://www.roguebasin.com/index.php?title=Category:Developing
use: splint
* style
>https://www.securecoding.cert.org/confluence/display/c/2+Rules
>https://www.doc.ic.ac.uk/lab/cplus/cstyle.html
>https://www.misra.org.uk/forum/viewforum.php?f=164
COMMENTS! in C code it maybe very needed.
* books
1. K&R C
2. Linden Expert C 
3. Harbison c ref man
4. C standard lib
* libs
>https://notabug.org/koz.ross/awesome-c#generic-programming
>https://github.com/attractivechaos/klib
>https://www.ibm.com/developerworks/linux/tutorials/l-glib/
ldconfig -p
nm -g libsome.so
readelf -Ws libsome.so
objdump
slang newt
* kernel
>http://syscalls.kernelgrok.com/
>http://free-electrons.com/doc/books/ldd3.pdf
>http://www.tldp.org/HOWTO/Module-HOWTO/
>http://groveronline.com/2013/12/kernel-development-with-vms-some-tips/
>https://saurorja.org/2011/07/04/creating-a-minimal-kernel-development-setup-using-kvmqemu/
** modules
>https://www.opennet.ru/base/dev/kernel_module_guide.txt.html

* LEARN
>https://github.com/yusufshakeel/C-Project
hack linux kernel: net mm kernel arch
make modules 
implement basic TCP/IP HTTP 

Use glib, tcod?, ...other libs
>http://www.ccfit.nsu.ru/~kireev/lab1/lab1time.htm
>read: https://git.busybox.net/busybox/tree/networking/udhcp?h=1_26_stable
>https://developer.gnome.org/glib/2.52/
* learn
>https://github.com/clibs/clib
>http://tools.suckless.org/
>http://www.robertgamble.net/2012/01/c11-generic-selections.html
>http://www.learn-c.org/
>https://habrahabr.ru/post/325678/
>http://www.json.org/json-ru.html
>https://linux.die.net/man/3/asprintf
>http://www.vividmachines.com/shellcode/shellcode.html
>http://www.cprogramming.com/
>http://cdecl.org/ 
>https://ru.wikipedia.org/wiki/Strlcpy
>http://www.linuxcenter.ru/lib/books/zlp/
>http://www.adamtornhill.com/Patterns%20in%20C%201.pdf
>https://www.opennet.ru/docs/RUS/sdl_intro/toc.html
>https://developer.gnome.org/glib/stable/
>https://www.gnu.org/software/gnulib/
>https://linux.die.net/man/3/hsearch
>https://troydhanson.github.io/uthash/userguide.html
>http://pyviy.blogspot.ru/2010/12/gcc.html
>http://www.opennet.ru/base/dev/shared_lib_intro.txt.html
>http://duartes.org/gustavo/blog/post/anatomy-of-a-program-in-memory/
>http://ccfit.nsu.ru/~deviv/courses/unix/unix/ng1e3.html
>http://www.linuxcenter.ru/lib/books/linuxdev/linuxdev5.phtml
>https://habrahabr.ru/post/321468/
>http://www.linuxcenter.ru/lib/books/linuxdev/linuxdev9.phtml
>http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/stdint.h.html
>http://pubs.opengroup.org/onlinepubs/009695399/functions/calloc.html
>http://forcoder.ru/linux/
>https://en.wikipedia.org/wiki/Rpath
>https://www.opennet.ru/man.shtml?topic=dlopen&category=3

* terminal
>https://robpol86.github.io/terminaltables/
>http://invisible-island.net/ncurses/ncurses-intro.html
>https://docs.freebsd.org/doc/8.0-RELEASE/usr/share/doc/ncurses/ncurses-intro.html
>http://alexber220.narod.ru/ncurses/
>http://heather.cs.ucdavis.edu/~matloff/UnixAndC/CLanguage/Curses.pdf
>http://invisible-island.net/ncurses/man/

* memory
>http://dmalloc.com/

* posix linux api
>http://citforum.ru/programming/unix/linux_api/

* use
alloca
asprintf
cdecl (cutils)


profiler
>http://www.eax.me/c-cpp-profiling/
* Text Editor										:VIP:
  - [ ] http://viewsourcecode.org/snaptoken/kilo/?utm_content=buffer7dbbd&utm_medium=social&utm_source=twitter.com&utm_campaign=buffer

* tips
errno проверять возвращаемый результат scanf, malloc...(stdlib)
strtoumax strtoimax
int8_t int16_t int32_t int64_t uint8_t uint16_t uint32_t uint64_t
intptr_t и uintptr_t intmax_t, uintmax_t INT32_MIN ...  минимум memset
calloc вместо malloc
<assert.h> assert( some && "msg")
<errno.h> perror()
math.h compile with -lm
stddef.h
NULL и ptrdiff_t, wchar t и size_t.
libc, glib, posix lib 
>https://ru.wikipedia.org/wiki/C_POSIX_library
 - queue :: mq_open mp_send
 - pipe :: popen mkfifo
 - agrs :: getopt
 - signals :: 
      >http://citforum.ru/programming/unix/signals/
      >http://man7.org/linux/man-pages/man2/sigaction.2.html
asprintf
* gdb
>https://blogs.oracle.com/ksplice/8-gdb-tricks-you-should-know
>https://habrahabr.ru/company/neobit/blog/141067/
>http://rus-linux.net/nlib.php?name=/MyLDP/algol/gdb/otladka-s-gdb.html
gdb ptype
>https://sourceware.org/gdb/onlinedocs/gdb/Machine-Code.html
>>http://dbp-consulting.com/tutorials/debugging/basicAsmDebuggingGDB.html
* valgrind
>http://www.valgrind.org/docs/manual/cl-manual.html
>http://www.valgrind.org/docs/manual/ms-manual.html
--track-origins=yes
>http://eax.me/valgrind/
>http://alexott.net/ru/linux/valgrind/Valgrind.html
* projects
** weather
      first learn how to send http and get response
            >http://linux.maruhn.com/sec/libghttp.html
            >https://curl.haxx.se/libcurl/
      second how to parse xml (some lib use)
      >http://www.xmlsoft.org/
      >http://www.xmlsoft.org/examples/
      >http://www.jclark.com/xml/expat.html
      >http://tidy.sourceforge.net/libintro.html
** todo book
      0. create notes book
      1. view list of notes
      2. add new notes
      3. edit, delete, notes
      4. 
* network
>https://www.opennet.ru/base/dev/linux_network_internal.txt.html
>https://www.opennet.ru/docs/RUS/tcpip/netprg1.html
>http://citforum.ru/book/cook/winsock.shtml
>https://ru.wikipedia.org/wiki/%D0%A1%D0%BE%D0%BA%D0%B5%D1%82%D1%8B_%D0%91%D0%B5%D1%80%D0%BA%D0%BB%D0%B8
